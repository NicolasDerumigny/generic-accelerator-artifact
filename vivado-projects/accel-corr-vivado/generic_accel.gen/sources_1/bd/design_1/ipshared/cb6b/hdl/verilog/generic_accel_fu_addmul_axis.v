// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_accel_fu_addmul_axis (
        ap_clk,
        ap_rst,
        op,
        st,
        ld0,
        ld1,
        i,
        j,
        k,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [4:0] op;
input  [15:0] st;
input  [15:0] ld0;
input  [15:0] ld1;
input  [31:0] i;
input  [31:0] j;
input  [31:0] k;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
input   ap_ce;

reg[15:0] ap_return_0;
reg[15:0] ap_return_1;
reg[15:0] ap_return_2;

reg   [15:0] ld1_read_reg_357;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_pp0_stage0_11001;
reg   [15:0] ld1_read_reg_357_pp0_iter1_reg;
reg   [15:0] ld1_read_reg_357_pp0_iter2_reg;
reg   [15:0] ld0_read_reg_365;
reg   [15:0] ld0_read_reg_365_pp0_iter1_reg;
reg   [15:0] ld0_read_reg_365_pp0_iter2_reg;
reg   [15:0] st_read_reg_378;
reg   [15:0] st_read_reg_378_pp0_iter1_reg;
reg   [15:0] st_read_reg_378_pp0_iter2_reg;
wire   [4:0] op_read_read_fu_124_p2;
reg   [4:0] op_read_reg_384;
reg   [4:0] op_read_reg_384_pp0_iter1_reg;
reg   [4:0] op_read_reg_384_pp0_iter2_reg;
reg   [4:0] op_read_reg_384_pp0_iter3_reg;
wire   [0:0] icmp_ln167_fu_256_p2;
reg   [0:0] icmp_ln167_reg_393;
reg   [0:0] icmp_ln167_reg_393_pp0_iter1_reg;
reg   [0:0] icmp_ln167_reg_393_pp0_iter2_reg;
wire   [0:0] grp_fu_239_p2;
reg   [0:0] icmp_ln139_reg_398;
reg   [0:0] icmp_ln139_reg_398_pp0_iter1_reg;
reg   [0:0] icmp_ln139_reg_398_pp0_iter2_reg;
reg   [0:0] icmp_ln88_reg_403;
reg   [0:0] icmp_ln88_reg_403_pp0_iter1_reg;
reg   [0:0] icmp_ln88_reg_403_pp0_iter2_reg;
wire   [31:0] conv_fu_236_p1;
reg   [31:0] conv_reg_408;
wire   [0:0] icmp_ln150_fu_279_p2;
reg   [0:0] icmp_ln150_reg_414;
wire   [0:0] icmp_ln150_1_fu_285_p2;
reg   [0:0] icmp_ln150_1_reg_419;
wire   [31:0] grp_fu_223_p1;
wire   [15:0] select_ln167_fu_291_p3;
wire   [15:0] select_ln150_fu_307_p3;
wire   [15:0] select_ln139_fu_314_p3;
wire   [15:0] bitcast_ln10_fu_329_p1;
wire   [15:0] select_ln88_fu_333_p3;
reg   [15:0] ap_phi_mux_a_write_assign_phi_fu_134_p20;
wire   [15:0] ap_phi_reg_pp0_iter0_a_write_assign_reg_130;
reg   [15:0] ap_phi_reg_pp0_iter1_a_write_assign_reg_130;
reg   [15:0] ap_phi_reg_pp0_iter2_a_write_assign_reg_130;
reg   [15:0] ap_phi_reg_pp0_iter3_a_write_assign_reg_130;
reg   [15:0] ap_phi_reg_pp0_iter4_a_write_assign_reg_130;
wire   [15:0] grp_fu_231_p1;
reg   [15:0] ap_phi_mux_b_write_assign_phi_fu_161_p20;
wire   [15:0] ap_phi_reg_pp0_iter0_b_write_assign_reg_157;
reg   [15:0] ap_phi_reg_pp0_iter1_b_write_assign_reg_157;
reg   [15:0] ap_phi_reg_pp0_iter2_b_write_assign_reg_157;
reg   [15:0] ap_phi_reg_pp0_iter3_b_write_assign_reg_157;
reg   [15:0] ap_phi_reg_pp0_iter4_b_write_assign_reg_157;
reg   [15:0] ap_phi_mux_c_write_assign_phi_fu_195_p20;
wire   [15:0] ap_phi_reg_pp0_iter0_c_write_assign_reg_191;
reg   [15:0] ap_phi_reg_pp0_iter1_c_write_assign_reg_191;
reg   [15:0] ap_phi_reg_pp0_iter2_c_write_assign_reg_191;
reg   [15:0] ap_phi_reg_pp0_iter3_c_write_assign_reg_191;
reg   [15:0] ap_phi_reg_pp0_iter4_c_write_assign_reg_191;
wire   [31:0] grp_fu_223_p0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln162_fu_245_p2;
wire   [31:0] bitcast_ln150_fu_262_p1;
wire   [7:0] tmp_fu_265_p4;
wire   [22:0] trunc_ln150_fu_275_p1;
wire   [0:0] or_ln150_fu_297_p2;
wire   [0:0] grp_fu_226_p2;
wire   [0:0] and_ln150_fu_301_p2;
wire   [15:0] bitcast_ln8_fu_320_p1;
wire   [15:0] xor_ln1498_fu_323_p2;
reg    grp_fu_223_ce;
reg    grp_fu_226_ce;
wire    ap_block_pp0_stage0_00001;
reg    grp_fu_231_ce;
reg    ap_ce_reg;
reg   [4:0] op_int_reg;
reg   [15:0] st_int_reg;
reg   [15:0] ld0_int_reg;
reg   [15:0] ld1_int_reg;
reg   [31:0] i_int_reg;
reg   [31:0] j_int_reg;
reg   [31:0] k_int_reg;
reg   [15:0] ap_return_0_int_reg;
reg   [15:0] ap_return_1_int_reg;
reg   [15:0] ap_return_2_int_reg;

generic_accel_uitofp_32ns_32_4_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
uitofp_32ns_32_4_no_dsp_0_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p0),
    .ce(grp_fu_223_ce),
    .dout(grp_fu_223_p1)
);

generic_accel_fcmp_32ns_32ns_1_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_0_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(conv_reg_408),
    .din1(32'd1036831949),
    .ce(grp_fu_226_ce),
    .opcode(5'd5),
    .dout(grp_fu_226_p2)
);

generic_accel_sptohp_32ns_16_2_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 16 ))
sptohp_32ns_16_2_no_dsp_0_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_223_p1),
    .ce(grp_fu_231_ce),
    .dout(grp_fu_231_p1)
);

generic_accel_hptosp_16ns_32_1_no_dsp_0 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
hptosp_16ns_32_1_no_dsp_0_U160(
    .din0(ld0_read_reg_365),
    .dout(conv_fu_236_p1)
);

always @ (posedge ap_clk) begin
    ap_ce_reg <= ap_ce;
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd0) | ((op_read_read_fu_124_p2 == 5'd17) | ((op_read_read_fu_124_p2 == 5'd18) | ((op_read_read_fu_124_p2 == 5'd19) | ((op_read_read_fu_124_p2 == 5'd20) | ((op_read_read_fu_124_p2 == 5'd21) | ((op_read_read_fu_124_p2 == 5'd24) | ((op_read_read_fu_124_p2 == 5'd25) | ((op_read_read_fu_124_p2 == 5'd26) | ((op_read_read_fu_124_p2 == 5'd27) | ((op_read_read_fu_124_p2 == 5'd30) | (op_read_read_fu_124_p2 == 5'd31)))))))))))))) begin
        ap_phi_reg_pp0_iter1_a_write_assign_reg_130 <= 16'd0;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd7) | ((op_read_read_fu_124_p2 == 5'd8) | (op_read_read_fu_124_p2 == 5'd9)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd3) | ((op_read_read_fu_124_p2 == 5'd4) | ((op_read_read_fu_124_p2 == 5'd5) | ((op_read_read_fu_124_p2 == 5'd14) | ((op_read_read_fu_124_p2 == 5'd15) | (op_read_read_fu_124_p2 == 5'd16))))))) | ((op_read_read_fu_124_p2 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)))) begin
        ap_phi_reg_pp0_iter1_a_write_assign_reg_130 <= ld0_int_reg;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter1_a_write_assign_reg_130 <= ap_phi_reg_pp0_iter0_a_write_assign_reg_130;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd3) | ((op_read_read_fu_124_p2 == 5'd4) | ((op_read_read_fu_124_p2 == 5'd5) | ((op_read_read_fu_124_p2 == 5'd14) | ((op_read_read_fu_124_p2 == 5'd15) | (op_read_read_fu_124_p2 == 5'd16)))))))) begin
        ap_phi_reg_pp0_iter1_b_write_assign_reg_157 <= ld1_int_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd7) | ((op_read_read_fu_124_p2 == 5'd8) | (op_read_read_fu_124_p2 == 5'd9)))) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd0) | ((op_read_read_fu_124_p2 == 5'd17) | ((op_read_read_fu_124_p2 == 5'd18) | ((op_read_read_fu_124_p2 == 5'd19) | ((op_read_read_fu_124_p2 == 5'd20) | ((op_read_read_fu_124_p2 == 5'd21) | ((op_read_read_fu_124_p2 == 5'd24) | ((op_read_read_fu_124_p2 == 5'd25) | ((op_read_read_fu_124_p2 == 5'd26) | ((op_read_read_fu_124_p2 == 5'd27) | ((op_read_read_fu_124_p2 == 5'd30) | (op_read_read_fu_124_p2 == 5'd31))))))))))))) | ((op_read_read_fu_124_p2 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)))) begin
        ap_phi_reg_pp0_iter1_b_write_assign_reg_157 <= 16'd15360;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter1_b_write_assign_reg_157 <= ap_phi_reg_pp0_iter0_b_write_assign_reg_157;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd7) | ((op_read_read_fu_124_p2 == 5'd8) | (op_read_read_fu_124_p2 == 5'd9))))) begin
        ap_phi_reg_pp0_iter1_c_write_assign_reg_191 <= ld1_int_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd3) | ((op_read_read_fu_124_p2 == 5'd4) | ((op_read_read_fu_124_p2 == 5'd5) | ((op_read_read_fu_124_p2 == 5'd14) | ((op_read_read_fu_124_p2 == 5'd15) | (op_read_read_fu_124_p2 == 5'd16))))))) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd0) | ((op_read_read_fu_124_p2 == 5'd17) | ((op_read_read_fu_124_p2 == 5'd18) | ((op_read_read_fu_124_p2 == 5'd19) | ((op_read_read_fu_124_p2 == 5'd20) | ((op_read_read_fu_124_p2 == 5'd21) | ((op_read_read_fu_124_p2 == 5'd24) | ((op_read_read_fu_124_p2 == 5'd25) | ((op_read_read_fu_124_p2 == 5'd26) | ((op_read_read_fu_124_p2 == 5'd27) | ((op_read_read_fu_124_p2 == 5'd30) | (op_read_read_fu_124_p2 == 5'd31))))))))))))) | ((op_read_read_fu_124_p2 == 5'd6) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)))) begin
        ap_phi_reg_pp0_iter1_c_write_assign_reg_191 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter1_c_write_assign_reg_191 <= ap_phi_reg_pp0_iter0_c_write_assign_reg_191;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_reg_384_pp0_iter2_reg == 5'd1) | (op_read_reg_384_pp0_iter2_reg == 5'd2))) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_reg_384_pp0_iter2_reg == 5'd10) | ((op_read_reg_384_pp0_iter2_reg == 5'd12) | ((op_read_reg_384_pp0_iter2_reg == 5'd13) | (op_read_reg_384_pp0_iter2_reg == 5'd11))))))) begin
        ap_phi_reg_pp0_iter4_a_write_assign_reg_130 <= ld0_read_reg_365_pp0_iter2_reg;
    end else if (((op_read_reg_384_pp0_iter2_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_a_write_assign_reg_130 <= select_ln139_fu_314_p3;
    end else if (((op_read_reg_384_pp0_iter2_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_a_write_assign_reg_130 <= select_ln150_fu_307_p3;
    end else if (((op_read_reg_384_pp0_iter2_reg == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_a_write_assign_reg_130 <= select_ln167_fu_291_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_a_write_assign_reg_130 <= ap_phi_reg_pp0_iter3_a_write_assign_reg_130;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_reg_384_pp0_iter2_reg == 5'd1) | (op_read_reg_384_pp0_iter2_reg == 5'd2)))) begin
        ap_phi_reg_pp0_iter4_b_write_assign_reg_157 <= ld1_read_reg_357_pp0_iter2_reg;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_reg_384_pp0_iter2_reg == 5'd10) | ((op_read_reg_384_pp0_iter2_reg == 5'd12) | ((op_read_reg_384_pp0_iter2_reg == 5'd13) | (op_read_reg_384_pp0_iter2_reg == 5'd11))))) | ((op_read_reg_384_pp0_iter2_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)) | ((op_read_reg_384_pp0_iter2_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)) | ((op_read_reg_384_pp0_iter2_reg == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)))) begin
        ap_phi_reg_pp0_iter4_b_write_assign_reg_157 <= 16'd15360;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_b_write_assign_reg_157 <= ap_phi_reg_pp0_iter3_b_write_assign_reg_157;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_reg_384_pp0_iter2_reg == 5'd1) | (op_read_reg_384_pp0_iter2_reg == 5'd2)))) begin
        ap_phi_reg_pp0_iter4_c_write_assign_reg_191 <= select_ln88_fu_333_p3;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_reg_384_pp0_iter2_reg == 5'd10) | ((op_read_reg_384_pp0_iter2_reg == 5'd12) | ((op_read_reg_384_pp0_iter2_reg == 5'd13) | (op_read_reg_384_pp0_iter2_reg == 5'd11)))))) begin
        ap_phi_reg_pp0_iter4_c_write_assign_reg_191 <= bitcast_ln10_fu_329_p1;
    end else if (((op_read_reg_384_pp0_iter2_reg == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_c_write_assign_reg_191 <= ld0_read_reg_365_pp0_iter2_reg;
    end else if ((((op_read_reg_384_pp0_iter2_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)) | ((op_read_reg_384_pp0_iter2_reg == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg)))) begin
        ap_phi_reg_pp0_iter4_c_write_assign_reg_191 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter4_c_write_assign_reg_191 <= ap_phi_reg_pp0_iter3_c_write_assign_reg_191;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        ap_phi_reg_pp0_iter2_a_write_assign_reg_130 <= ap_phi_reg_pp0_iter1_a_write_assign_reg_130;
        ap_phi_reg_pp0_iter2_b_write_assign_reg_157 <= ap_phi_reg_pp0_iter1_b_write_assign_reg_157;
        ap_phi_reg_pp0_iter2_c_write_assign_reg_191 <= ap_phi_reg_pp0_iter1_c_write_assign_reg_191;
        ap_phi_reg_pp0_iter3_a_write_assign_reg_130 <= ap_phi_reg_pp0_iter2_a_write_assign_reg_130;
        ap_phi_reg_pp0_iter3_b_write_assign_reg_157 <= ap_phi_reg_pp0_iter2_b_write_assign_reg_157;
        ap_phi_reg_pp0_iter3_c_write_assign_reg_191 <= ap_phi_reg_pp0_iter2_c_write_assign_reg_191;
        icmp_ln139_reg_398_pp0_iter1_reg <= icmp_ln139_reg_398;
        icmp_ln139_reg_398_pp0_iter2_reg <= icmp_ln139_reg_398_pp0_iter1_reg;
        icmp_ln167_reg_393_pp0_iter1_reg <= icmp_ln167_reg_393;
        icmp_ln167_reg_393_pp0_iter2_reg <= icmp_ln167_reg_393_pp0_iter1_reg;
        icmp_ln88_reg_403_pp0_iter1_reg <= icmp_ln88_reg_403;
        icmp_ln88_reg_403_pp0_iter2_reg <= icmp_ln88_reg_403_pp0_iter1_reg;
        ld0_read_reg_365 <= ld0_int_reg;
        ld0_read_reg_365_pp0_iter1_reg <= ld0_read_reg_365;
        ld0_read_reg_365_pp0_iter2_reg <= ld0_read_reg_365_pp0_iter1_reg;
        ld1_read_reg_357 <= ld1_int_reg;
        ld1_read_reg_357_pp0_iter1_reg <= ld1_read_reg_357;
        ld1_read_reg_357_pp0_iter2_reg <= ld1_read_reg_357_pp0_iter1_reg;
        op_read_reg_384 <= op_int_reg;
        op_read_reg_384_pp0_iter1_reg <= op_read_reg_384;
        op_read_reg_384_pp0_iter2_reg <= op_read_reg_384_pp0_iter1_reg;
        op_read_reg_384_pp0_iter3_reg <= op_read_reg_384_pp0_iter2_reg;
        st_read_reg_378 <= st_int_reg;
        st_read_reg_378_pp0_iter1_reg <= st_read_reg_378;
        st_read_reg_378_pp0_iter2_reg <= st_read_reg_378_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce_reg)) begin
        ap_return_0_int_reg <= ap_phi_mux_a_write_assign_phi_fu_134_p20;
        ap_return_1_int_reg <= ap_phi_mux_b_write_assign_phi_fu_161_p20;
        ap_return_2_int_reg <= ap_phi_mux_c_write_assign_phi_fu_195_p20;
    end
end

always @ (posedge ap_clk) begin
    if (((op_read_reg_384 == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        conv_reg_408 <= conv_fu_236_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        i_int_reg <= i;
        j_int_reg <= j;
        k_int_reg <= k;
        ld0_int_reg <= ld0;
        ld1_int_reg <= ld1;
        op_int_reg <= op;
        st_int_reg <= st;
    end
end

always @ (posedge ap_clk) begin
    if (((op_read_read_fu_124_p2 == 5'd22) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        icmp_ln139_reg_398 <= grp_fu_239_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((op_read_reg_384_pp0_iter1_reg == 5'd23) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        icmp_ln150_1_reg_419 <= icmp_ln150_1_fu_285_p2;
        icmp_ln150_reg_414 <= icmp_ln150_fu_279_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((op_read_read_fu_124_p2 == 5'd29) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        icmp_ln167_reg_393 <= icmp_ln167_fu_256_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg) & ((op_read_read_fu_124_p2 == 5'd1) | (op_read_read_fu_124_p2 == 5'd2)))) begin
        icmp_ln88_reg_403 <= grp_fu_239_p2;
    end
end

always @ (*) begin
    if ((op_read_reg_384_pp0_iter3_reg == 5'd28)) begin
        ap_phi_mux_a_write_assign_phi_fu_134_p20 = grp_fu_231_p1;
    end else begin
        ap_phi_mux_a_write_assign_phi_fu_134_p20 = ap_phi_reg_pp0_iter4_a_write_assign_reg_130;
    end
end

always @ (*) begin
    if ((op_read_reg_384_pp0_iter3_reg == 5'd28)) begin
        ap_phi_mux_b_write_assign_phi_fu_161_p20 = 16'd15360;
    end else begin
        ap_phi_mux_b_write_assign_phi_fu_161_p20 = ap_phi_reg_pp0_iter4_b_write_assign_reg_157;
    end
end

always @ (*) begin
    if ((op_read_reg_384_pp0_iter3_reg == 5'd28)) begin
        ap_phi_mux_c_write_assign_phi_fu_195_p20 = 16'd0;
    end else begin
        ap_phi_mux_c_write_assign_phi_fu_195_p20 = ap_phi_reg_pp0_iter4_c_write_assign_reg_191;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_0 = ap_return_0_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_0 = ap_phi_mux_a_write_assign_phi_fu_134_p20;
    end else begin
        ap_return_0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_1 = ap_return_1_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_1 = ap_phi_mux_b_write_assign_phi_fu_161_p20;
    end else begin
        ap_return_1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b0 == ap_ce_reg)) begin
        ap_return_2 = ap_return_2_int_reg;
    end else if ((1'b1 == ap_ce_reg)) begin
        ap_return_2 = ap_phi_mux_c_write_assign_phi_fu_195_p20;
    end else begin
        ap_return_2 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_223_ce = 1'b1;
    end else begin
        grp_fu_223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_226_ce = 1'b1;
    end else begin
        grp_fu_226_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce_reg))) begin
        grp_fu_231_ce = 1'b1;
    end else begin
        grp_fu_231_ce = 1'b0;
    end
end

assign and_ln150_fu_301_p2 = (or_ln150_fu_297_p2 & grp_fu_226_p2);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_phi_reg_pp0_iter0_a_write_assign_reg_130 = 'bx;

assign ap_phi_reg_pp0_iter0_b_write_assign_reg_157 = 'bx;

assign ap_phi_reg_pp0_iter0_c_write_assign_reg_191 = 'bx;

assign bitcast_ln10_fu_329_p1 = xor_ln1498_fu_323_p2;

assign bitcast_ln150_fu_262_p1 = conv_reg_408;

assign bitcast_ln8_fu_320_p1 = ld1_read_reg_357_pp0_iter2_reg;

assign grp_fu_223_p0 = icmp_ln162_fu_245_p2;

assign grp_fu_239_p2 = ((j_int_reg == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln150_1_fu_285_p2 = ((trunc_ln150_fu_275_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln150_fu_279_p2 = ((tmp_fu_265_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln162_fu_245_p2 = ((i_int_reg == j_int_reg) ? 1'b1 : 1'b0);

assign icmp_ln167_fu_256_p2 = ((j_int_reg == k_int_reg) ? 1'b1 : 1'b0);

assign op_read_read_fu_124_p2 = op_int_reg;

assign or_ln150_fu_297_p2 = (icmp_ln150_reg_414 | icmp_ln150_1_reg_419);

assign select_ln139_fu_314_p3 = ((icmp_ln139_reg_398_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : st_read_reg_378_pp0_iter2_reg);

assign select_ln150_fu_307_p3 = ((and_ln150_fu_301_p2[0:0] == 1'b1) ? 16'd15360 : ld0_read_reg_365_pp0_iter2_reg);

assign select_ln167_fu_291_p3 = ((icmp_ln167_reg_393_pp0_iter2_reg[0:0] == 1'b1) ? 16'd15360 : ld0_read_reg_365_pp0_iter2_reg);

assign select_ln88_fu_333_p3 = ((icmp_ln88_reg_403_pp0_iter2_reg[0:0] == 1'b1) ? 16'd0 : st_read_reg_378_pp0_iter2_reg);

assign tmp_fu_265_p4 = {{bitcast_ln150_fu_262_p1[30:23]}};

assign trunc_ln150_fu_275_p1 = bitcast_ln150_fu_262_p1[22:0];

assign xor_ln1498_fu_323_p2 = (bitcast_ln8_fu_320_p1 ^ 16'd32768);

endmodule //generic_accel_fu_addmul_axis
