// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module generic_accel_fu_addmul_axis (
        ap_ready,
        op,
        st,
        ld0,
        ld1,
        loop_carried_val,
        j,
        red_idx,
        lat_step,
        ap_return_0,
        ap_return_1,
        ap_return_2
);


output   ap_ready;
input  [7:0] op;
input  [15:0] st;
input  [15:0] ld0;
input  [15:0] ld1;
input  [15:0] loop_carried_val;
input  [31:0] j;
input  [31:0] red_idx;
input  [31:0] lat_step;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;

reg   [15:0] ap_phi_mux_a_0_phi_fu_129_p18;
wire   [7:0] op_read_read_fu_120_p2;
wire   [15:0] bitcast_ln17_fu_292_p1;
reg   [15:0] ap_phi_mux_b_0_phi_fu_160_p18;
reg   [15:0] ap_phi_mux_c_2_phi_fu_192_p18;
wire   [15:0] select_ln71_fu_259_p3;
wire   [15:0] select_ln49_fu_297_p3;
wire   [15:0] bitcast_ln10_fu_227_p1;
wire   [15:0] select_ln88_fu_238_p3;
wire   [15:0] bitcast_ln8_fu_217_p1;
wire   [15:0] xor_ln1498_fu_221_p2;
wire   [0:0] icmp_ln88_fu_232_p2;
wire   [31:0] or_ln71_fu_247_p2;
wire   [0:0] icmp_ln71_fu_253_p2;
wire   [31:0] or_ln49_fu_268_p2;
wire   [15:0] bitcast_ln15_fu_280_p1;
wire   [14:0] trunc_ln1497_fu_284_p1;
wire   [15:0] zext_ln17_fu_288_p1;
wire   [0:0] icmp_ln49_fu_274_p2;
wire    ap_ce_reg;

always @ (*) begin
    if ((op_read_read_fu_120_p2 == 8'd13)) begin
        ap_phi_mux_a_0_phi_fu_129_p18 = bitcast_ln17_fu_292_p1;
    end else if (((op_read_read_fu_120_p2 == 8'd15) | (op_read_read_fu_120_p2 == 8'd14) | (op_read_read_fu_120_p2 == 8'd10) | (op_read_read_fu_120_p2 == 8'd16) | (op_read_read_fu_120_p2 == 8'd5) | (op_read_read_fu_120_p2 == 8'd4) | (op_read_read_fu_120_p2 == 8'd3) | (op_read_read_fu_120_p2 == 8'd20) | (op_read_read_fu_120_p2 == 8'd9) | (op_read_read_fu_120_p2 == 8'd8) | (op_read_read_fu_120_p2 == 8'd7) | (op_read_read_fu_120_p2 == 8'd6) | (op_read_read_fu_120_p2 == 8'd18) | (op_read_read_fu_120_p2 == 8'd19) | (op_read_read_fu_120_p2 == 8'd17) | (op_read_read_fu_120_p2 == 8'd2) | (op_read_read_fu_120_p2 == 8'd1) | (op_read_read_fu_120_p2 == 8'd12) | (op_read_read_fu_120_p2 == 8'd11))) begin
        ap_phi_mux_a_0_phi_fu_129_p18 = ld0;
    end else if ((~(op_read_read_fu_120_p2 == 8'd15) & ~(op_read_read_fu_120_p2 == 8'd14) & ~(op_read_read_fu_120_p2 == 8'd10) & ~(op_read_read_fu_120_p2 == 8'd16) & ~(op_read_read_fu_120_p2 == 8'd5) & ~(op_read_read_fu_120_p2 == 8'd4) & ~(op_read_read_fu_120_p2 == 8'd3) & ~(op_read_read_fu_120_p2 == 8'd20) & ~(op_read_read_fu_120_p2 == 8'd9) & ~(op_read_read_fu_120_p2 == 8'd8) & ~(op_read_read_fu_120_p2 == 8'd7) & ~(op_read_read_fu_120_p2 == 8'd6) & ~(op_read_read_fu_120_p2 == 8'd18) & ~(op_read_read_fu_120_p2 == 8'd19) & ~(op_read_read_fu_120_p2 == 8'd17) & ~(op_read_read_fu_120_p2 == 8'd2) & ~(op_read_read_fu_120_p2 == 8'd1) & ~(op_read_read_fu_120_p2 == 8'd12) & ~(op_read_read_fu_120_p2 == 8'd13) & ~(op_read_read_fu_120_p2 == 8'd11))) begin
        ap_phi_mux_a_0_phi_fu_129_p18 = 16'd0;
    end else begin
        ap_phi_mux_a_0_phi_fu_129_p18 = 'bx;
    end
end

always @ (*) begin
    if (((op_read_read_fu_120_p2 == 8'd16) | (op_read_read_fu_120_p2 == 8'd5) | (op_read_read_fu_120_p2 == 8'd4) | (op_read_read_fu_120_p2 == 8'd3) | (op_read_read_fu_120_p2 == 8'd18) | (op_read_read_fu_120_p2 == 8'd19) | (op_read_read_fu_120_p2 == 8'd17) | (op_read_read_fu_120_p2 == 8'd2) | (op_read_read_fu_120_p2 == 8'd1) | (op_read_read_fu_120_p2 == 8'd12))) begin
        ap_phi_mux_b_0_phi_fu_160_p18 = ld1;
    end else if (((op_read_read_fu_120_p2 == 8'd15) | (op_read_read_fu_120_p2 == 8'd14) | (op_read_read_fu_120_p2 == 8'd10) | (op_read_read_fu_120_p2 == 8'd20) | (op_read_read_fu_120_p2 == 8'd9) | (op_read_read_fu_120_p2 == 8'd8) | (op_read_read_fu_120_p2 == 8'd7) | (op_read_read_fu_120_p2 == 8'd6) | (op_read_read_fu_120_p2 == 8'd13) | (op_read_read_fu_120_p2 == 8'd11) | (~(op_read_read_fu_120_p2 == 8'd15) & ~(op_read_read_fu_120_p2 == 8'd14) & ~(op_read_read_fu_120_p2 == 8'd10) & ~(op_read_read_fu_120_p2 == 8'd16) & ~(op_read_read_fu_120_p2 == 8'd5) & ~(op_read_read_fu_120_p2 == 8'd4) & ~(op_read_read_fu_120_p2 == 8'd3) & ~(op_read_read_fu_120_p2 == 8'd20) & ~(op_read_read_fu_120_p2 == 8'd9) & ~(op_read_read_fu_120_p2 == 8'd8) & ~(op_read_read_fu_120_p2 == 8'd7) & ~(op_read_read_fu_120_p2 == 8'd6) & ~(op_read_read_fu_120_p2 == 8'd18) & ~(op_read_read_fu_120_p2 == 8'd19) & ~(op_read_read_fu_120_p2 == 8'd17) & ~(op_read_read_fu_120_p2 == 8'd2) & ~(op_read_read_fu_120_p2 == 8'd1) & ~(op_read_read_fu_120_p2 == 8'd12) & ~(op_read_read_fu_120_p2 == 8'd13) & ~(op_read_read_fu_120_p2 == 8'd11)))) begin
        ap_phi_mux_b_0_phi_fu_160_p18 = 16'd15360;
    end else begin
        ap_phi_mux_b_0_phi_fu_160_p18 = 'bx;
    end
end

always @ (*) begin
    if (((op_read_read_fu_120_p2 == 8'd1) | ((op_read_read_fu_120_p2 == 8'd2) | ((op_read_read_fu_120_p2 == 8'd17) | ((op_read_read_fu_120_p2 == 8'd18) | (op_read_read_fu_120_p2 == 8'd19)))))) begin
        ap_phi_mux_c_2_phi_fu_192_p18 = select_ln88_fu_238_p3;
    end else if (((op_read_read_fu_120_p2 == 8'd7) | ((op_read_read_fu_120_p2 == 8'd8) | ((op_read_read_fu_120_p2 == 8'd20) | (op_read_read_fu_120_p2 == 8'd9))))) begin
        ap_phi_mux_c_2_phi_fu_192_p18 = ld1;
    end else if (((op_read_read_fu_120_p2 == 8'd10) | ((op_read_read_fu_120_p2 == 8'd15) | (op_read_read_fu_120_p2 == 8'd14)))) begin
        ap_phi_mux_c_2_phi_fu_192_p18 = bitcast_ln10_fu_227_p1;
    end else if ((op_read_read_fu_120_p2 == 8'd13)) begin
        ap_phi_mux_c_2_phi_fu_192_p18 = select_ln49_fu_297_p3;
    end else if ((op_read_read_fu_120_p2 == 8'd12)) begin
        ap_phi_mux_c_2_phi_fu_192_p18 = select_ln71_fu_259_p3;
    end else if (((op_read_read_fu_120_p2 == 8'd16) | (op_read_read_fu_120_p2 == 8'd5) | (op_read_read_fu_120_p2 == 8'd4) | (op_read_read_fu_120_p2 == 8'd3) | (op_read_read_fu_120_p2 == 8'd6) | (op_read_read_fu_120_p2 == 8'd11) | (~(op_read_read_fu_120_p2 == 8'd15) & ~(op_read_read_fu_120_p2 == 8'd14) & ~(op_read_read_fu_120_p2 == 8'd10) & ~(op_read_read_fu_120_p2 == 8'd16) & ~(op_read_read_fu_120_p2 == 8'd5) & ~(op_read_read_fu_120_p2 == 8'd4) & ~(op_read_read_fu_120_p2 == 8'd3) & ~(op_read_read_fu_120_p2 == 8'd20) & ~(op_read_read_fu_120_p2 == 8'd9) & ~(op_read_read_fu_120_p2 == 8'd8) & ~(op_read_read_fu_120_p2 == 8'd7) & ~(op_read_read_fu_120_p2 == 8'd6) & ~(op_read_read_fu_120_p2 == 8'd18) & ~(op_read_read_fu_120_p2 == 8'd19) & ~(op_read_read_fu_120_p2 == 8'd17) & ~(op_read_read_fu_120_p2 == 8'd2) & ~(op_read_read_fu_120_p2 == 8'd1) & ~(op_read_read_fu_120_p2 == 8'd12) & ~(op_read_read_fu_120_p2 == 8'd13) & ~(op_read_read_fu_120_p2 == 8'd11)))) begin
        ap_phi_mux_c_2_phi_fu_192_p18 = 16'd0;
    end else begin
        ap_phi_mux_c_2_phi_fu_192_p18 = 'bx;
    end
end

assign ap_ready = 1'b1;

assign bitcast_ln10_fu_227_p1 = xor_ln1498_fu_221_p2;

assign bitcast_ln15_fu_280_p1 = ld0;

assign bitcast_ln17_fu_292_p1 = zext_ln17_fu_288_p1;

assign bitcast_ln8_fu_217_p1 = ld1;

assign icmp_ln49_fu_274_p2 = ((or_ln49_fu_268_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln71_fu_253_p2 = ((or_ln71_fu_247_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln88_fu_232_p2 = ((j == 32'd0) ? 1'b1 : 1'b0);

assign or_ln49_fu_268_p2 = (red_idx | lat_step);

assign or_ln71_fu_247_p2 = (red_idx | lat_step);

assign select_ln49_fu_297_p3 = ((icmp_ln49_fu_274_p2[0:0] == 1'b1) ? 16'd0 : loop_carried_val);

assign select_ln71_fu_259_p3 = ((icmp_ln71_fu_253_p2[0:0] == 1'b1) ? 16'd0 : loop_carried_val);

assign select_ln88_fu_238_p3 = ((icmp_ln88_fu_232_p2[0:0] == 1'b1) ? 16'd0 : st);

assign trunc_ln1497_fu_284_p1 = bitcast_ln15_fu_280_p1[14:0];

assign xor_ln1498_fu_221_p2 = (bitcast_ln8_fu_217_p1 ^ 16'd32768);

assign zext_ln17_fu_288_p1 = trunc_ln1497_fu_284_p1;

assign ap_return_0 = ap_phi_mux_a_0_phi_fu_129_p18;

assign ap_return_1 = ap_phi_mux_b_0_phi_fu_160_p18;

assign ap_return_2 = ap_phi_mux_c_2_phi_fu_192_p18;

assign op_read_read_fu_120_p2 = op;

endmodule //generic_accel_fu_addmul_axis
