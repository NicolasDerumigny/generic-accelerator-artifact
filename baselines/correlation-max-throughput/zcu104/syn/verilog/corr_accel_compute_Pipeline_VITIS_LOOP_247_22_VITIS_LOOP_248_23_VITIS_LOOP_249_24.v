// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module corr_accel_compute_Pipeline_VITIS_LOOP_247_22_VITIS_LOOP_248_23_VITIS_LOOP_249_24 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        reg_file_6_0_address0,
        reg_file_6_0_ce0,
        reg_file_6_0_q0,
        reg_file_6_1_address0,
        reg_file_6_1_ce0,
        reg_file_6_1_q0,
        reg_file_3_1_address0,
        reg_file_3_1_ce0,
        reg_file_3_1_we0,
        reg_file_3_1_d0,
        reg_file_3_1_address1,
        reg_file_3_1_ce1,
        reg_file_3_1_q1,
        reg_file_3_0_address0,
        reg_file_3_0_ce0,
        reg_file_3_0_we0,
        reg_file_3_0_d0,
        reg_file_3_0_address1,
        reg_file_3_0_ce1,
        reg_file_3_0_q1,
        reg_file_2_1_address0,
        reg_file_2_1_ce0,
        reg_file_2_1_q0,
        reg_file_2_0_address0,
        reg_file_2_0_ce0,
        reg_file_2_0_q0,
        grp_fu_284_p_din0,
        grp_fu_284_p_din1,
        grp_fu_284_p_dout0,
        grp_fu_284_p_ce,
        grp_fu_288_p_din0,
        grp_fu_288_p_din1,
        grp_fu_288_p_dout0,
        grp_fu_288_p_ce,
        grp_fu_300_p_din0,
        grp_fu_300_p_din1,
        grp_fu_300_p_dout0,
        grp_fu_300_p_ce,
        grp_fu_304_p_din0,
        grp_fu_304_p_din1,
        grp_fu_304_p_dout0,
        grp_fu_304_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] reg_file_6_0_address0;
output   reg_file_6_0_ce0;
input  [15:0] reg_file_6_0_q0;
output  [10:0] reg_file_6_1_address0;
output   reg_file_6_1_ce0;
input  [15:0] reg_file_6_1_q0;
output  [10:0] reg_file_3_1_address0;
output   reg_file_3_1_ce0;
output   reg_file_3_1_we0;
output  [15:0] reg_file_3_1_d0;
output  [10:0] reg_file_3_1_address1;
output   reg_file_3_1_ce1;
input  [15:0] reg_file_3_1_q1;
output  [10:0] reg_file_3_0_address0;
output   reg_file_3_0_ce0;
output   reg_file_3_0_we0;
output  [15:0] reg_file_3_0_d0;
output  [10:0] reg_file_3_0_address1;
output   reg_file_3_0_ce1;
input  [15:0] reg_file_3_0_q1;
output  [10:0] reg_file_2_1_address0;
output   reg_file_2_1_ce0;
input  [15:0] reg_file_2_1_q0;
output  [10:0] reg_file_2_0_address0;
output   reg_file_2_0_ce0;
input  [15:0] reg_file_2_0_q0;
output  [15:0] grp_fu_284_p_din0;
output  [15:0] grp_fu_284_p_din1;
input  [15:0] grp_fu_284_p_dout0;
output   grp_fu_284_p_ce;
output  [15:0] grp_fu_288_p_din0;
output  [15:0] grp_fu_288_p_din1;
input  [15:0] grp_fu_288_p_dout0;
output   grp_fu_288_p_ce;
output  [15:0] grp_fu_300_p_din0;
output  [15:0] grp_fu_300_p_din1;
input  [15:0] grp_fu_300_p_dout0;
output   grp_fu_300_p_ce;
output  [15:0] grp_fu_304_p_din0;
output  [15:0] grp_fu_304_p_din1;
input  [15:0] grp_fu_304_p_dout0;
output   grp_fu_304_p_ce;

reg ap_idle;
reg[10:0] reg_file_6_0_address0;
reg reg_file_6_0_ce0;
reg[10:0] reg_file_6_1_address0;
reg reg_file_6_1_ce0;
reg reg_file_3_1_ce0;
reg reg_file_3_1_we0;
reg reg_file_3_1_ce1;
reg reg_file_3_0_ce0;
reg reg_file_3_0_we0;
reg reg_file_3_0_ce1;
reg reg_file_2_1_ce0;
reg reg_file_2_0_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln247_fu_283_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [4:0] indvars_iv114_udiv_reg_676;
wire   [0:0] empty_42_fu_279_p1;
reg   [0:0] empty_42_reg_681;
reg   [0:0] empty_42_reg_681_pp0_iter2_reg;
reg   [0:0] icmp_ln247_reg_687;
reg   [0:0] icmp_ln247_reg_687_pp0_iter2_reg;
wire   [0:0] icmp_ln248_fu_301_p2;
reg   [0:0] icmp_ln248_reg_691;
reg   [0:0] icmp_ln248_reg_691_pp0_iter2_reg;
wire   [0:0] tmp_fu_329_p3;
reg   [0:0] tmp_reg_699;
wire   [0:0] or_ln247_1_fu_343_p2;
reg   [0:0] or_ln247_1_reg_703;
reg   [0:0] or_ln247_1_reg_703_pp0_iter2_reg;
wire   [0:0] select_ln248_1_fu_369_p3;
reg   [0:0] select_ln248_1_reg_709;
reg   [0:0] select_ln248_1_reg_709_pp0_iter2_reg;
reg   [0:0] select_ln248_1_reg_709_pp0_iter3_reg;
reg   [4:0] indvars_iv114_udiv_mid1_reg_715;
wire   [0:0] empty_46_fu_387_p1;
reg   [0:0] empty_46_reg_720;
reg   [0:0] empty_46_reg_720_pp0_iter2_reg;
reg   [4:0] lshr_ln_reg_726;
reg   [4:0] lshr_ln_reg_726_pp0_iter2_reg;
reg   [4:0] tmp_19_reg_732;
wire   [4:0] tmp_16_dup_fu_517_p4;
reg   [4:0] tmp_16_dup_reg_752;
wire   [0:0] select_ln247_4_fu_527_p3;
reg   [0:0] select_ln247_4_reg_757;
wire   [15:0] select_ln248_2_fu_605_p3;
reg   [10:0] reg_file_3_0_addr_reg_788;
reg   [10:0] reg_file_3_0_addr_reg_788_pp0_iter4_reg;
reg   [10:0] reg_file_3_0_addr_reg_788_pp0_iter5_reg;
reg   [10:0] reg_file_3_1_addr_reg_799;
reg   [10:0] reg_file_3_1_addr_reg_799_pp0_iter4_reg;
reg   [10:0] reg_file_3_1_addr_reg_799_pp0_iter5_reg;
wire   [15:0] ret_fu_627_p3;
reg   [15:0] ret_reg_810;
reg   [15:0] mul2_reg_815;
wire   [15:0] ret_2_fu_634_p3;
reg   [15:0] ret_2_reg_820;
reg   [15:0] mul259_1_reg_825;
reg    ap_condition_exit_pp0_iter3_stage0;
wire   [63:0] p_cast_fu_477_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] p_cast_mid181_fu_505_p1;
wire   [63:0] p_cast_mid1_fu_543_p1;
wire   [63:0] zext_ln259_fu_569_p1;
wire   [63:0] zext_ln253_fu_621_p1;
reg   [6:0] k_fu_82;
wire   [6:0] add_ln249_fu_419_p2;
wire    ap_loop_init;
reg   [6:0] j_fu_86;
wire   [6:0] select_ln248_3_fu_391_p3;
reg   [12:0] indvar_flatten50_fu_90;
wire   [12:0] select_ln248_5_fu_431_p3;
reg   [6:0] i_fu_94;
wire   [6:0] select_ln247_3_fu_510_p3;
reg   [17:0] indvar_flatten95_fu_98;
wire   [17:0] add_ln247_fu_289_p2;
wire   [0:0] cmp250_fu_263_p2;
wire   [0:0] xor_ln249_fu_337_p2;
wire   [6:0] select_ln247_fu_307_p3;
wire   [6:0] select_ln247_1_fu_315_p3;
wire   [6:0] add_ln248_fu_349_p2;
wire   [0:0] or_ln247_fu_323_p2;
wire   [0:0] cmp250_mid1_fu_363_p2;
wire   [6:0] select_ln248_fu_355_p3;
wire   [12:0] add_ln248_1_fu_425_p2;
wire   [5:0] empty_41_fu_466_p1;
wire   [10:0] tmp_17_fu_470_p3;
wire   [6:0] add_ln247_1_fu_483_p2;
wire   [5:0] empty_45_fu_493_p1;
wire   [10:0] tmp_17_mid_fu_497_p3;
wire   [0:0] empty_44_fu_489_p1;
wire   [0:0] empty_fu_462_p1;
wire   [10:0] tmp_17_mid1_fu_534_p4;
wire   [0:0] select_ln247_5_fu_549_p3;
wire   [0:0] select_ln248_4_fu_555_p3;
wire   [10:0] add_ln9_fu_561_p4;
wire   [15:0] tmp_s_fu_580_p4;
wire   [15:0] select_ln247_2_fu_589_p3;
wire   [15:0] tmp_69_mid1_fu_596_p4;
wire   [10:0] add_ln8_fu_614_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op105_load_state4;
reg    ap_enable_operation_105;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_enable_operation_112;
reg    ap_enable_state5_pp0_iter4_stage0;
wire    ap_enable_operation_126;
reg    ap_enable_state7_pp0_iter6_stage0;
reg    ap_predicate_op109_load_state4;
reg    ap_enable_operation_109;
reg    ap_enable_operation_115;
wire    ap_enable_operation_128;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_619;
reg    ap_condition_625;
reg    ap_condition_243;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_done_reg = 1'b0;
end

corr_accel_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U115(
    .din0(reg_file_6_0_q0),
    .din1(reg_file_6_1_q0),
    .din2(empty_42_reg_681_pp0_iter2_reg),
    .dout(tmp_s_fu_580_p4)
);

corr_accel_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U116(
    .din0(reg_file_6_0_q0),
    .din1(reg_file_6_1_q0),
    .din2(empty_46_reg_720_pp0_iter2_reg),
    .dout(tmp_69_mid1_fu_596_p4)
);

corr_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter3_stage0)) begin
            ap_enable_reg_pp0_iter4 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            i_fu_94 <= 7'd0;
        end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln247_reg_687 == 1'd0))) begin
            i_fu_94 <= select_ln247_3_fu_510_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten50_fu_90 <= 13'd0;
        end else if (((icmp_ln247_fu_283_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten50_fu_90 <= select_ln248_5_fu_431_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten95_fu_98 <= 18'd0;
        end else if (((icmp_ln247_fu_283_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten95_fu_98 <= add_ln247_fu_289_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_86 <= 7'd0;
        end else if (((icmp_ln247_fu_283_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_86 <= select_ln248_3_fu_391_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_82 <= 7'd0;
        end else if (((icmp_ln247_fu_283_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_82 <= add_ln249_fu_419_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        empty_42_reg_681 <= empty_42_fu_279_p1;
        icmp_ln247_reg_687 <= icmp_ln247_fu_283_p2;
        indvars_iv114_udiv_reg_676 <= {{j_fu_86[5:1]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        empty_42_reg_681_pp0_iter2_reg <= empty_42_reg_681;
        empty_46_reg_720_pp0_iter2_reg <= empty_46_reg_720;
        icmp_ln247_reg_687_pp0_iter2_reg <= icmp_ln247_reg_687;
        icmp_ln248_reg_691_pp0_iter2_reg <= icmp_ln248_reg_691;
        lshr_ln_reg_726_pp0_iter2_reg <= lshr_ln_reg_726;
        mul259_1_reg_825 <= grp_fu_304_p_dout0;
        mul2_reg_815 <= grp_fu_300_p_dout0;
        or_ln247_1_reg_703_pp0_iter2_reg <= or_ln247_1_reg_703;
        reg_file_3_0_addr_reg_788_pp0_iter4_reg <= reg_file_3_0_addr_reg_788;
        reg_file_3_0_addr_reg_788_pp0_iter5_reg <= reg_file_3_0_addr_reg_788_pp0_iter4_reg;
        reg_file_3_1_addr_reg_799_pp0_iter4_reg <= reg_file_3_1_addr_reg_799;
        reg_file_3_1_addr_reg_799_pp0_iter5_reg <= reg_file_3_1_addr_reg_799_pp0_iter4_reg;
        ret_2_reg_820 <= ret_2_fu_634_p3;
        ret_reg_810 <= ret_fu_627_p3;
        select_ln248_1_reg_709_pp0_iter2_reg <= select_ln248_1_reg_709;
        select_ln248_1_reg_709_pp0_iter3_reg <= select_ln248_1_reg_709_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln247_fu_283_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_46_reg_720 <= empty_46_fu_387_p1;
        icmp_ln248_reg_691 <= icmp_ln248_fu_301_p2;
        indvars_iv114_udiv_mid1_reg_715 <= {{add_ln248_fu_349_p2[5:1]}};
        lshr_ln_reg_726 <= {{select_ln248_fu_355_p3[5:1]}};
        or_ln247_1_reg_703 <= or_ln247_1_fu_343_p2;
        select_ln248_1_reg_709 <= select_ln248_1_fu_369_p3;
        tmp_19_reg_732 <= {{select_ln248_3_fu_391_p3[5:1]}};
        tmp_reg_699 <= k_fu_82[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln247_reg_687_pp0_iter2_reg == 1'd0))) begin
        reg_file_3_0_addr_reg_788 <= zext_ln253_fu_621_p1;
        reg_file_3_1_addr_reg_799 <= zext_ln253_fu_621_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln247_reg_687 == 1'd0))) begin
        select_ln247_4_reg_757 <= select_ln247_4_fu_527_p3;
        tmp_16_dup_reg_752 <= {{select_ln247_3_fu_510_p3[5:1]}};
    end
end

always @ (*) begin
    if (((icmp_ln247_fu_283_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln247_reg_687_pp0_iter2_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter3_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter5_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_file_2_0_ce0 = 1'b1;
    end else begin
        reg_file_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_file_2_1_ce0 = 1'b1;
    end else begin
        reg_file_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        reg_file_3_0_ce0 = 1'b1;
    end else begin
        reg_file_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        reg_file_3_0_ce1 = 1'b1;
    end else begin
        reg_file_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        reg_file_3_0_we0 = 1'b1;
    end else begin
        reg_file_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        reg_file_3_1_ce0 = 1'b1;
    end else begin
        reg_file_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        reg_file_3_1_ce1 = 1'b1;
    end else begin
        reg_file_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        reg_file_3_1_we0 = 1'b1;
    end else begin
        reg_file_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_243)) begin
        if ((1'b1 == ap_condition_625)) begin
            reg_file_6_0_address0 = p_cast_mid1_fu_543_p1;
        end else if (((or_ln247_1_reg_703 == 1'd1) & (icmp_ln248_reg_691 == 1'd1))) begin
            reg_file_6_0_address0 = p_cast_mid181_fu_505_p1;
        end else if ((1'b1 == ap_condition_619)) begin
            reg_file_6_0_address0 = p_cast_fu_477_p1;
        end else begin
            reg_file_6_0_address0 = 'bx;
        end
    end else begin
        reg_file_6_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (empty_46_reg_720 == 1'd0) & (or_ln247_1_reg_703 == 1'd0) & (tmp_reg_699 == 1'd1) & (icmp_ln248_reg_691 == 1'd0) & (icmp_ln247_reg_687 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln247_1_reg_703 == 1'd1) & (tmp_reg_699 == 1'd0) & (icmp_ln248_reg_691 == 1'd0) & (icmp_ln247_reg_687 == 1'd0) & (empty_42_reg_681 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln247_1_reg_703 == 1'd1) & (icmp_ln248_reg_691 == 1'd1) & (icmp_ln247_reg_687 == 1'd0)))) begin
        reg_file_6_0_ce0 = 1'b1;
    end else begin
        reg_file_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((or_ln247_1_reg_703 == 1'd0) & (icmp_ln247_reg_687 == 1'd0))) begin
            reg_file_6_1_address0 = p_cast_mid1_fu_543_p1;
        end else if (((or_ln247_1_reg_703 == 1'd1) & (icmp_ln248_reg_691 == 1'd0))) begin
            reg_file_6_1_address0 = p_cast_fu_477_p1;
        end else begin
            reg_file_6_1_address0 = 'bx;
        end
    end else begin
        reg_file_6_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln247_1_reg_703 == 1'd0) & (icmp_ln247_reg_687 == 1'd0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (or_ln247_1_reg_703 == 1'd1) & (icmp_ln248_reg_691 == 1'd0)))) begin
        reg_file_6_1_ce0 = 1'b1;
    end else begin
        reg_file_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln247_1_fu_483_p2 = (i_fu_94 + 7'd1);

assign add_ln247_fu_289_p2 = (indvar_flatten95_fu_98 + 18'd1);

assign add_ln248_1_fu_425_p2 = (indvar_flatten50_fu_90 + 13'd1);

assign add_ln248_fu_349_p2 = (select_ln247_fu_307_p3 + 7'd1);

assign add_ln249_fu_419_p2 = (select_ln248_fu_355_p3 + 7'd2);

assign add_ln8_fu_614_p4 = {{{tmp_16_dup_reg_752}, {select_ln247_4_reg_757}}, {lshr_ln_reg_726_pp0_iter2_reg}};

assign add_ln9_fu_561_p4 = {{{tmp_19_reg_732}, {select_ln248_4_fu_555_p3}}, {lshr_ln_reg_726}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_243 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln247_reg_687 == 1'd0));
end

always @ (*) begin
    ap_condition_619 = ((or_ln247_1_reg_703 == 1'd1) & (tmp_reg_699 == 1'd0) & (icmp_ln248_reg_691 == 1'd0) & (empty_42_reg_681 == 1'd0));
end

always @ (*) begin
    ap_condition_625 = ((empty_46_reg_720 == 1'd0) & (or_ln247_1_reg_703 == 1'd0) & (tmp_reg_699 == 1'd1) & (icmp_ln248_reg_691 == 1'd0));
end

always @ (*) begin
    ap_enable_operation_105 = (ap_predicate_op105_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_109 = (ap_predicate_op109_load_state4 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_112 = (select_ln248_1_reg_709_pp0_iter3_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_115 = (select_ln248_1_reg_709_pp0_iter3_reg == 1'd0);
end

assign ap_enable_operation_126 = (1'b1 == 1'b1);

assign ap_enable_operation_128 = (1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state5_pp0_iter4_stage0 = ((ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state7_pp0_iter6_stage0 = ((ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

always @ (*) begin
    ap_predicate_op105_load_state4 = ((select_ln248_1_reg_709_pp0_iter2_reg == 1'd0) & (icmp_ln247_reg_687_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op109_load_state4 = ((select_ln248_1_reg_709_pp0_iter2_reg == 1'd0) & (icmp_ln247_reg_687_pp0_iter2_reg == 1'd0));
end

assign cmp250_fu_263_p2 = ((j_fu_86 == 7'd0) ? 1'b1 : 1'b0);

assign cmp250_mid1_fu_363_p2 = ((add_ln248_fu_349_p2 == 7'd0) ? 1'b1 : 1'b0);

assign empty_41_fu_466_p1 = i_fu_94[5:0];

assign empty_42_fu_279_p1 = j_fu_86[0:0];

assign empty_44_fu_489_p1 = add_ln247_1_fu_483_p2[0:0];

assign empty_45_fu_493_p1 = add_ln247_1_fu_483_p2[5:0];

assign empty_46_fu_387_p1 = add_ln248_fu_349_p2[0:0];

assign empty_fu_462_p1 = i_fu_94[0:0];

assign grp_fu_284_p_ce = 1'b1;

assign grp_fu_284_p_din0 = ret_reg_810;

assign grp_fu_284_p_din1 = mul2_reg_815;

assign grp_fu_288_p_ce = 1'b1;

assign grp_fu_288_p_din0 = ret_2_reg_820;

assign grp_fu_288_p_din1 = mul259_1_reg_825;

assign grp_fu_300_p_ce = 1'b1;

assign grp_fu_300_p_din0 = select_ln248_2_fu_605_p3;

assign grp_fu_300_p_din1 = reg_file_2_0_q0;

assign grp_fu_304_p_ce = 1'b1;

assign grp_fu_304_p_din0 = select_ln248_2_fu_605_p3;

assign grp_fu_304_p_din1 = reg_file_2_1_q0;

assign icmp_ln247_fu_283_p2 = ((indvar_flatten95_fu_98 == 18'd131072) ? 1'b1 : 1'b0);

assign icmp_ln248_fu_301_p2 = ((indvar_flatten50_fu_90 == 13'd2048) ? 1'b1 : 1'b0);

assign or_ln247_1_fu_343_p2 = (xor_ln249_fu_337_p2 | icmp_ln248_fu_301_p2);

assign or_ln247_fu_323_p2 = (icmp_ln248_fu_301_p2 | cmp250_fu_263_p2);

assign p_cast_fu_477_p1 = tmp_17_fu_470_p3;

assign p_cast_mid181_fu_505_p1 = tmp_17_mid_fu_497_p3;

assign p_cast_mid1_fu_543_p1 = tmp_17_mid1_fu_534_p4;

assign reg_file_2_0_address0 = zext_ln259_fu_569_p1;

assign reg_file_2_1_address0 = zext_ln259_fu_569_p1;

assign reg_file_3_0_address0 = reg_file_3_0_addr_reg_788_pp0_iter5_reg;

assign reg_file_3_0_address1 = zext_ln253_fu_621_p1;

assign reg_file_3_0_d0 = grp_fu_284_p_dout0;

assign reg_file_3_1_address0 = reg_file_3_1_addr_reg_799_pp0_iter5_reg;

assign reg_file_3_1_address1 = zext_ln253_fu_621_p1;

assign reg_file_3_1_d0 = grp_fu_288_p_dout0;

assign ret_2_fu_634_p3 = ((select_ln248_1_reg_709_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : reg_file_3_1_q1);

assign ret_fu_627_p3 = ((select_ln248_1_reg_709_pp0_iter3_reg[0:0] == 1'b1) ? 16'd0 : reg_file_3_0_q1);

assign select_ln247_1_fu_315_p3 = ((icmp_ln248_fu_301_p2[0:0] == 1'b1) ? 7'd0 : k_fu_82);

assign select_ln247_2_fu_589_p3 = ((icmp_ln248_reg_691_pp0_iter2_reg[0:0] == 1'b1) ? reg_file_6_0_q0 : tmp_s_fu_580_p4);

assign select_ln247_3_fu_510_p3 = ((icmp_ln248_reg_691[0:0] == 1'b1) ? add_ln247_1_fu_483_p2 : i_fu_94);

assign select_ln247_4_fu_527_p3 = ((icmp_ln248_reg_691[0:0] == 1'b1) ? empty_44_fu_489_p1 : empty_fu_462_p1);

assign select_ln247_5_fu_549_p3 = ((icmp_ln248_reg_691[0:0] == 1'b1) ? 1'd0 : empty_42_reg_681);

assign select_ln247_fu_307_p3 = ((icmp_ln248_fu_301_p2[0:0] == 1'b1) ? 7'd0 : j_fu_86);

assign select_ln248_1_fu_369_p3 = ((or_ln247_1_fu_343_p2[0:0] == 1'b1) ? or_ln247_fu_323_p2 : cmp250_mid1_fu_363_p2);

assign select_ln248_2_fu_605_p3 = ((or_ln247_1_reg_703_pp0_iter2_reg[0:0] == 1'b1) ? select_ln247_2_fu_589_p3 : tmp_69_mid1_fu_596_p4);

assign select_ln248_3_fu_391_p3 = ((or_ln247_1_fu_343_p2[0:0] == 1'b1) ? select_ln247_fu_307_p3 : add_ln248_fu_349_p2);

assign select_ln248_4_fu_555_p3 = ((or_ln247_1_reg_703[0:0] == 1'b1) ? select_ln247_5_fu_549_p3 : empty_46_reg_720);

assign select_ln248_5_fu_431_p3 = ((icmp_ln248_fu_301_p2[0:0] == 1'b1) ? 13'd1 : add_ln248_1_fu_425_p2);

assign select_ln248_fu_355_p3 = ((or_ln247_1_fu_343_p2[0:0] == 1'b1) ? select_ln247_1_fu_315_p3 : 7'd0);

assign tmp_16_dup_fu_517_p4 = {{select_ln247_3_fu_510_p3[5:1]}};

assign tmp_17_fu_470_p3 = {{empty_41_fu_466_p1}, {indvars_iv114_udiv_reg_676}};

assign tmp_17_mid1_fu_534_p4 = {{{tmp_16_dup_fu_517_p4}, {select_ln247_4_fu_527_p3}}, {indvars_iv114_udiv_mid1_reg_715}};

assign tmp_17_mid_fu_497_p3 = {{empty_45_fu_493_p1}, {5'd0}};

assign tmp_fu_329_p3 = k_fu_82[32'd6];

assign xor_ln249_fu_337_p2 = (tmp_fu_329_p3 ^ 1'd1);

assign zext_ln253_fu_621_p1 = add_ln8_fu_614_p4;

assign zext_ln259_fu_569_p1 = add_ln9_fu_561_p4;

endmodule //corr_accel_compute_Pipeline_VITIS_LOOP_247_22_VITIS_LOOP_248_23_VITIS_LOOP_249_24
