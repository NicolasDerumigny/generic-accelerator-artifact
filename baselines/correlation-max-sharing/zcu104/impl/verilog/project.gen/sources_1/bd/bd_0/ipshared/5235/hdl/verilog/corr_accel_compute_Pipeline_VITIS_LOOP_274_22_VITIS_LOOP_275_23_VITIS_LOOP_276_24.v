// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module corr_accel_compute_Pipeline_VITIS_LOOP_274_22_VITIS_LOOP_275_23_VITIS_LOOP_276_24 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        reg_file_6_0_address0,
        reg_file_6_0_ce0,
        reg_file_6_0_q0,
        reg_file_6_1_address0,
        reg_file_6_1_ce0,
        reg_file_6_1_q0,
        reg_file_3_1_address0,
        reg_file_3_1_ce0,
        reg_file_3_1_we0,
        reg_file_3_1_d0,
        reg_file_3_1_address1,
        reg_file_3_1_ce1,
        reg_file_3_1_q1,
        reg_file_3_0_address0,
        reg_file_3_0_ce0,
        reg_file_3_0_we0,
        reg_file_3_0_d0,
        reg_file_3_0_address1,
        reg_file_3_0_ce1,
        reg_file_3_0_q1,
        reg_file_2_1_address0,
        reg_file_2_1_ce0,
        reg_file_2_1_q0,
        reg_file_2_0_address0,
        reg_file_2_0_ce0,
        reg_file_2_0_q0,
        grp_fu_284_p_din0,
        grp_fu_284_p_din1,
        grp_fu_284_p_dout0,
        grp_fu_284_p_ce,
        grp_fu_292_p_din0,
        grp_fu_292_p_din1,
        grp_fu_292_p_dout0,
        grp_fu_292_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] reg_file_6_0_address0;
output   reg_file_6_0_ce0;
input  [15:0] reg_file_6_0_q0;
output  [10:0] reg_file_6_1_address0;
output   reg_file_6_1_ce0;
input  [15:0] reg_file_6_1_q0;
output  [10:0] reg_file_3_1_address0;
output   reg_file_3_1_ce0;
output   reg_file_3_1_we0;
output  [15:0] reg_file_3_1_d0;
output  [10:0] reg_file_3_1_address1;
output   reg_file_3_1_ce1;
input  [15:0] reg_file_3_1_q1;
output  [10:0] reg_file_3_0_address0;
output   reg_file_3_0_ce0;
output   reg_file_3_0_we0;
output  [15:0] reg_file_3_0_d0;
output  [10:0] reg_file_3_0_address1;
output   reg_file_3_0_ce1;
input  [15:0] reg_file_3_0_q1;
output  [10:0] reg_file_2_1_address0;
output   reg_file_2_1_ce0;
input  [15:0] reg_file_2_1_q0;
output  [10:0] reg_file_2_0_address0;
output   reg_file_2_0_ce0;
input  [15:0] reg_file_2_0_q0;
output  [15:0] grp_fu_284_p_din0;
output  [15:0] grp_fu_284_p_din1;
input  [15:0] grp_fu_284_p_dout0;
output   grp_fu_284_p_ce;
output  [15:0] grp_fu_292_p_din0;
output  [15:0] grp_fu_292_p_din1;
input  [15:0] grp_fu_292_p_dout0;
output   grp_fu_292_p_ce;

reg ap_idle;
reg reg_file_6_0_ce0;
reg reg_file_6_1_ce0;
reg reg_file_3_1_ce0;
reg reg_file_3_1_we0;
reg reg_file_3_1_ce1;
reg reg_file_3_0_ce0;
reg reg_file_3_0_we0;
reg reg_file_3_0_ce1;
reg reg_file_2_1_ce0;
reg reg_file_2_0_ce0;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln274_fu_302_p2;
reg    ap_condition_exit_pp0_iter1_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [0:0] cmp250_fu_270_p2;
reg   [0:0] cmp250_reg_687;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] cmp250_reg_687_pp0_iter2_reg;
wire   [0:0] icmp_ln275_fu_317_p2;
reg   [0:0] icmp_ln275_reg_696;
reg   [0:0] icmp_ln275_reg_696_pp0_iter2_reg;
wire   [0:0] and_ln274_1_fu_379_p2;
reg   [0:0] and_ln274_1_reg_701;
reg   [0:0] and_ln274_1_reg_701_pp0_iter2_reg;
wire   [4:0] tmp_12_dup_fu_399_p4;
reg   [4:0] tmp_12_dup_reg_706;
wire   [0:0] cmp250_mid1_fu_423_p2;
reg   [0:0] cmp250_mid1_reg_711;
reg   [0:0] cmp250_mid1_reg_711_pp0_iter2_reg;
wire   [0:0] select_ln274_3_fu_439_p3;
reg   [0:0] select_ln274_3_reg_716;
wire   [0:0] select_ln275_2_fu_461_p3;
reg   [0:0] select_ln275_2_reg_721;
wire   [4:0] lshr_ln_fu_491_p4;
reg   [4:0] lshr_ln_reg_736;
wire   [0:0] trunc_ln282_fu_501_p1;
reg   [0:0] trunc_ln282_reg_741;
reg   [0:0] trunc_ln282_reg_741_pp0_iter2_reg;
reg   [0:0] trunc_ln282_reg_741_pp0_iter3_reg;
reg   [0:0] trunc_ln282_reg_741_pp0_iter4_reg;
reg   [10:0] reg_file_3_0_addr_reg_757;
reg   [10:0] reg_file_3_0_addr_reg_757_pp0_iter3_reg;
reg   [10:0] reg_file_3_0_addr_reg_757_pp0_iter4_reg;
reg   [10:0] reg_file_3_1_addr_reg_763;
reg   [10:0] reg_file_3_1_addr_reg_763_pp0_iter3_reg;
reg   [10:0] reg_file_3_1_addr_reg_763_pp0_iter4_reg;
wire   [15:0] tmp_s_fu_605_p4;
wire   [15:0] tmp_67_fu_615_p4;
wire   [15:0] ret_fu_644_p3;
reg   [15:0] ret_reg_779;
reg   [15:0] mul2_reg_784;
wire   [63:0] zext_ln275_fu_477_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln288_fu_541_p1;
wire   [63:0] zext_ln282_fu_599_p1;
reg   [6:0] k_fu_98;
wire   [6:0] add_ln276_fu_547_p2;
wire    ap_loop_init;
reg   [6:0] j_fu_102;
wire   [6:0] select_ln275_4_fu_483_p3;
reg   [13:0] indvar_flatten50_fu_106;
wire   [13:0] select_ln275_6_fu_559_p3;
reg   [6:0] i_fu_110;
wire   [6:0] select_ln274_2_fu_385_p3;
reg   [18:0] indvar_flatten93_fu_114;
wire   [18:0] add_ln274_fu_308_p2;
wire   [5:0] empty_92_fu_286_p1;
wire   [4:0] indvars_iv99_udiv_fu_276_p4;
wire   [6:0] add_ln274_1_fu_331_p2;
wire   [5:0] empty_96_fu_341_p1;
wire   [0:0] empty_93_fu_298_p1;
wire   [0:0] xor_ln274_fu_353_p2;
wire   [10:0] tmp_13_mid_fu_345_p3;
wire   [10:0] tmp_13_fu_290_p3;
wire   [0:0] icmp_ln276_fu_373_p2;
wire   [6:0] select_ln274_fu_323_p3;
wire   [0:0] or_ln275_fu_409_p2;
wire   [6:0] add_ln275_fu_393_p2;
wire   [0:0] empty_95_fu_337_p1;
wire   [0:0] empty_fu_266_p1;
wire   [4:0] indvars_iv99_udiv_mid1_fu_429_p4;
wire   [0:0] empty_97_fu_457_p1;
wire   [0:0] and_ln274_fu_359_p2;
wire   [10:0] tmp_13_mid1_fu_447_p4;
wire   [10:0] select_ln274_1_fu_365_p3;
wire   [10:0] select_ln275_3_fu_469_p3;
wire   [6:0] select_ln275_fu_415_p3;
wire   [0:0] select_ln274_4_fu_505_p3;
wire   [4:0] tmp_15_fu_521_p4;
wire   [0:0] select_ln275_5_fu_513_p3;
wire   [10:0] add_ln9_fu_531_p4;
wire   [13:0] add_ln275_1_fu_553_p2;
wire   [10:0] add_ln8_fu_592_p4;
wire   [0:0] or_ln274_fu_625_p2;
wire   [0:0] select_ln275_1_fu_629_p3;
wire   [15:0] val_fu_635_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
wire    ap_enable_operation_104;
reg    ap_enable_state3_pp0_iter2_stage0;
wire    ap_enable_operation_113;
reg    ap_enable_state4_pp0_iter3_stage0;
reg    ap_enable_operation_125;
reg    ap_enable_state6_pp0_iter5_stage0;
wire    ap_enable_operation_105;
wire    ap_enable_operation_114;
reg    ap_enable_operation_127;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

corr_accel_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U111(
    .din0(reg_file_6_0_q0),
    .din1(reg_file_6_1_q0),
    .din2(select_ln275_2_reg_721),
    .dout(tmp_s_fu_605_p4)
);

corr_accel_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U112(
    .din0(reg_file_2_0_q0),
    .din1(reg_file_2_1_q0),
    .din2(trunc_ln282_reg_741),
    .dout(tmp_67_fu_615_p4)
);

corr_accel_mux_21_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 16 ))
mux_21_16_1_1_U113(
    .din0(reg_file_3_0_q1),
    .din1(reg_file_3_1_q1),
    .din2(trunc_ln282_reg_741_pp0_iter2_reg),
    .dout(val_fu_635_p4)
);

corr_accel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter1_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            i_fu_110 <= 7'd0;
        end else if (((icmp_ln274_fu_302_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            i_fu_110 <= select_ln274_2_fu_385_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten50_fu_106 <= 14'd0;
        end else if (((icmp_ln274_fu_302_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten50_fu_106 <= select_ln275_6_fu_559_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            indvar_flatten93_fu_114 <= 19'd0;
        end else if (((icmp_ln274_fu_302_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            indvar_flatten93_fu_114 <= add_ln274_fu_308_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            j_fu_102 <= 7'd0;
        end else if (((icmp_ln274_fu_302_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            j_fu_102 <= select_ln275_4_fu_483_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_fu_98 <= 7'd0;
        end else if (((icmp_ln274_fu_302_p2 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_fu_98 <= add_ln276_fu_547_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln274_fu_302_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        and_ln274_1_reg_701 <= and_ln274_1_fu_379_p2;
        cmp250_mid1_reg_711 <= cmp250_mid1_fu_423_p2;
        icmp_ln275_reg_696 <= icmp_ln275_fu_317_p2;
        lshr_ln_reg_736 <= {{select_ln275_fu_415_p3[5:1]}};
        select_ln274_3_reg_716 <= select_ln274_3_fu_439_p3;
        select_ln275_2_reg_721 <= select_ln275_2_fu_461_p3;
        tmp_12_dup_reg_706 <= {{select_ln274_2_fu_385_p3[5:1]}};
        trunc_ln282_reg_741 <= trunc_ln282_fu_501_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln274_1_reg_701_pp0_iter2_reg <= and_ln274_1_reg_701;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        cmp250_mid1_reg_711_pp0_iter2_reg <= cmp250_mid1_reg_711;
        cmp250_reg_687_pp0_iter2_reg <= cmp250_reg_687;
        icmp_ln275_reg_696_pp0_iter2_reg <= icmp_ln275_reg_696;
        mul2_reg_784 <= grp_fu_292_p_dout0;
        reg_file_3_0_addr_reg_757 <= zext_ln282_fu_599_p1;
        reg_file_3_0_addr_reg_757_pp0_iter3_reg <= reg_file_3_0_addr_reg_757;
        reg_file_3_0_addr_reg_757_pp0_iter4_reg <= reg_file_3_0_addr_reg_757_pp0_iter3_reg;
        reg_file_3_1_addr_reg_763 <= zext_ln282_fu_599_p1;
        reg_file_3_1_addr_reg_763_pp0_iter3_reg <= reg_file_3_1_addr_reg_763;
        reg_file_3_1_addr_reg_763_pp0_iter4_reg <= reg_file_3_1_addr_reg_763_pp0_iter3_reg;
        ret_reg_779 <= ret_fu_644_p3;
        trunc_ln282_reg_741_pp0_iter2_reg <= trunc_ln282_reg_741;
        trunc_ln282_reg_741_pp0_iter3_reg <= trunc_ln282_reg_741_pp0_iter2_reg;
        trunc_ln282_reg_741_pp0_iter4_reg <= trunc_ln282_reg_741_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready;
        cmp250_reg_687 <= cmp250_fu_270_p2;
    end
end

always @ (*) begin
    if (((icmp_ln274_fu_302_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_file_2_0_ce0 = 1'b1;
    end else begin
        reg_file_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_file_2_1_ce0 = 1'b1;
    end else begin
        reg_file_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        reg_file_3_0_ce0 = 1'b1;
    end else begin
        reg_file_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_file_3_0_ce1 = 1'b1;
    end else begin
        reg_file_3_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln282_reg_741_pp0_iter4_reg == 1'd0))) begin
        reg_file_3_0_we0 = 1'b1;
    end else begin
        reg_file_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        reg_file_3_1_ce0 = 1'b1;
    end else begin
        reg_file_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        reg_file_3_1_ce1 = 1'b1;
    end else begin
        reg_file_3_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (trunc_ln282_reg_741_pp0_iter4_reg == 1'd1))) begin
        reg_file_3_1_we0 = 1'b1;
    end else begin
        reg_file_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_file_6_0_ce0 = 1'b1;
    end else begin
        reg_file_6_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reg_file_6_1_ce0 = 1'b1;
    end else begin
        reg_file_6_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln274_1_fu_331_p2 = (i_fu_110 + 7'd1);

assign add_ln274_fu_308_p2 = (indvar_flatten93_fu_114 + 19'd1);

assign add_ln275_1_fu_553_p2 = (indvar_flatten50_fu_106 + 14'd1);

assign add_ln275_fu_393_p2 = (select_ln274_fu_323_p3 + 7'd1);

assign add_ln276_fu_547_p2 = (select_ln275_fu_415_p3 + 7'd1);

assign add_ln8_fu_592_p4 = {{{tmp_12_dup_reg_706}, {select_ln274_3_reg_716}}, {lshr_ln_reg_736}};

assign add_ln9_fu_531_p4 = {{{tmp_15_fu_521_p4}, {select_ln275_5_fu_513_p3}}, {lshr_ln_fu_491_p4}};

assign and_ln274_1_fu_379_p2 = (xor_ln274_fu_353_p2 & icmp_ln276_fu_373_p2);

assign and_ln274_fu_359_p2 = (xor_ln274_fu_353_p2 & empty_93_fu_298_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_enable_operation_104 = (1'b1 == 1'b1);

assign ap_enable_operation_105 = (1'b1 == 1'b1);

assign ap_enable_operation_113 = (1'b1 == 1'b1);

assign ap_enable_operation_114 = (1'b1 == 1'b1);

always @ (*) begin
    ap_enable_operation_125 = (trunc_ln282_reg_741_pp0_iter4_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_127 = (trunc_ln282_reg_741_pp0_iter4_reg == 1'd1);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state6_pp0_iter5_stage0 = ((ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter1_stage0;

assign cmp250_fu_270_p2 = ((j_fu_102 == 7'd0) ? 1'b1 : 1'b0);

assign cmp250_mid1_fu_423_p2 = ((add_ln275_fu_393_p2 == 7'd0) ? 1'b1 : 1'b0);

assign empty_92_fu_286_p1 = i_fu_110[5:0];

assign empty_93_fu_298_p1 = j_fu_102[0:0];

assign empty_95_fu_337_p1 = add_ln274_1_fu_331_p2[0:0];

assign empty_96_fu_341_p1 = add_ln274_1_fu_331_p2[5:0];

assign empty_97_fu_457_p1 = add_ln275_fu_393_p2[0:0];

assign empty_fu_266_p1 = i_fu_110[0:0];

assign grp_fu_284_p_ce = 1'b1;

assign grp_fu_284_p_din0 = ret_reg_779;

assign grp_fu_284_p_din1 = mul2_reg_784;

assign grp_fu_292_p_ce = 1'b1;

assign grp_fu_292_p_din0 = tmp_s_fu_605_p4;

assign grp_fu_292_p_din1 = tmp_67_fu_615_p4;

assign icmp_ln274_fu_302_p2 = ((indvar_flatten93_fu_114 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln275_fu_317_p2 = ((indvar_flatten50_fu_106 == 14'd4096) ? 1'b1 : 1'b0);

assign icmp_ln276_fu_373_p2 = ((k_fu_98 == 7'd64) ? 1'b1 : 1'b0);

assign indvars_iv99_udiv_fu_276_p4 = {{j_fu_102[5:1]}};

assign indvars_iv99_udiv_mid1_fu_429_p4 = {{add_ln275_fu_393_p2[5:1]}};

assign lshr_ln_fu_491_p4 = {{select_ln275_fu_415_p3[5:1]}};

assign or_ln274_fu_625_p2 = (icmp_ln275_reg_696_pp0_iter2_reg | cmp250_reg_687_pp0_iter2_reg);

assign or_ln275_fu_409_p2 = (icmp_ln275_fu_317_p2 | and_ln274_1_fu_379_p2);

assign reg_file_2_0_address0 = zext_ln288_fu_541_p1;

assign reg_file_2_1_address0 = zext_ln288_fu_541_p1;

assign reg_file_3_0_address0 = reg_file_3_0_addr_reg_757_pp0_iter4_reg;

assign reg_file_3_0_address1 = zext_ln282_fu_599_p1;

assign reg_file_3_0_d0 = grp_fu_284_p_dout0;

assign reg_file_3_1_address0 = reg_file_3_1_addr_reg_763_pp0_iter4_reg;

assign reg_file_3_1_address1 = zext_ln282_fu_599_p1;

assign reg_file_3_1_d0 = grp_fu_284_p_dout0;

assign reg_file_6_0_address0 = zext_ln275_fu_477_p1;

assign reg_file_6_1_address0 = zext_ln275_fu_477_p1;

assign ret_fu_644_p3 = ((select_ln275_1_fu_629_p3[0:0] == 1'b1) ? 16'd0 : val_fu_635_p4);

assign select_ln274_1_fu_365_p3 = ((icmp_ln275_fu_317_p2[0:0] == 1'b1) ? tmp_13_mid_fu_345_p3 : tmp_13_fu_290_p3);

assign select_ln274_2_fu_385_p3 = ((icmp_ln275_fu_317_p2[0:0] == 1'b1) ? add_ln274_1_fu_331_p2 : i_fu_110);

assign select_ln274_3_fu_439_p3 = ((icmp_ln275_fu_317_p2[0:0] == 1'b1) ? empty_95_fu_337_p1 : empty_fu_266_p1);

assign select_ln274_4_fu_505_p3 = ((icmp_ln275_fu_317_p2[0:0] == 1'b1) ? 1'd0 : empty_93_fu_298_p1);

assign select_ln274_fu_323_p3 = ((icmp_ln275_fu_317_p2[0:0] == 1'b1) ? 7'd0 : j_fu_102);

assign select_ln275_1_fu_629_p3 = ((and_ln274_1_reg_701_pp0_iter2_reg[0:0] == 1'b1) ? cmp250_mid1_reg_711_pp0_iter2_reg : or_ln274_fu_625_p2);

assign select_ln275_2_fu_461_p3 = ((and_ln274_1_fu_379_p2[0:0] == 1'b1) ? empty_97_fu_457_p1 : and_ln274_fu_359_p2);

assign select_ln275_3_fu_469_p3 = ((and_ln274_1_fu_379_p2[0:0] == 1'b1) ? tmp_13_mid1_fu_447_p4 : select_ln274_1_fu_365_p3);

assign select_ln275_4_fu_483_p3 = ((and_ln274_1_fu_379_p2[0:0] == 1'b1) ? add_ln275_fu_393_p2 : select_ln274_fu_323_p3);

assign select_ln275_5_fu_513_p3 = ((and_ln274_1_fu_379_p2[0:0] == 1'b1) ? empty_97_fu_457_p1 : select_ln274_4_fu_505_p3);

assign select_ln275_6_fu_559_p3 = ((icmp_ln275_fu_317_p2[0:0] == 1'b1) ? 14'd1 : add_ln275_1_fu_553_p2);

assign select_ln275_fu_415_p3 = ((or_ln275_fu_409_p2[0:0] == 1'b1) ? 7'd0 : k_fu_98);

assign tmp_12_dup_fu_399_p4 = {{select_ln274_2_fu_385_p3[5:1]}};

assign tmp_13_fu_290_p3 = {{empty_92_fu_286_p1}, {indvars_iv99_udiv_fu_276_p4}};

assign tmp_13_mid1_fu_447_p4 = {{{tmp_12_dup_fu_399_p4}, {select_ln274_3_fu_439_p3}}, {indvars_iv99_udiv_mid1_fu_429_p4}};

assign tmp_13_mid_fu_345_p3 = {{empty_96_fu_341_p1}, {5'd0}};

assign tmp_15_fu_521_p4 = {{select_ln275_4_fu_483_p3[5:1]}};

assign trunc_ln282_fu_501_p1 = select_ln275_fu_415_p3[0:0];

assign xor_ln274_fu_353_p2 = (icmp_ln275_fu_317_p2 ^ 1'd1);

assign zext_ln275_fu_477_p1 = select_ln275_3_fu_469_p3;

assign zext_ln282_fu_599_p1 = add_ln8_fu_592_p4;

assign zext_ln288_fu_541_p1 = add_ln9_fu_531_p4;

endmodule //corr_accel_compute_Pipeline_VITIS_LOOP_274_22_VITIS_LOOP_275_23_VITIS_LOOP_276_24
