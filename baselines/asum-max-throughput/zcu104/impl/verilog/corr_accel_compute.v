// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module corr_accel_compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        reg_file_2_0_address0,
        reg_file_2_0_ce0,
        reg_file_2_0_q0,
        reg_file_2_1_address0,
        reg_file_2_1_ce0,
        reg_file_2_1_q0,
        reg_file_3_0_address0,
        reg_file_3_0_ce0,
        reg_file_3_0_we0,
        reg_file_3_0_d0
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] reg_file_2_0_address0;
output   reg_file_2_0_ce0;
input  [15:0] reg_file_2_0_q0;
output  [10:0] reg_file_2_1_address0;
output   reg_file_2_1_ce0;
input  [15:0] reg_file_2_1_q0;
output  [10:0] reg_file_3_0_address0;
output   reg_file_3_0_ce0;
output   reg_file_3_0_we0;
output  [15:0] reg_file_3_0_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg reg_file_3_0_ce0;
reg reg_file_3_0_we0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_done;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_idle;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_ready;
wire   [10:0] grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_0_address0;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_0_ce0;
wire   [10:0] grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_1_address0;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_1_ce0;
wire   [15:0] grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ret_out;
wire    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ret_out_ap_vld;
reg    grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start_reg;
wire    ap_CS_fsm_state2;
wire    ap_CS_fsm_state3;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start_reg = 1'b0;
end

corr_accel_compute_Pipeline_VITIS_LOOP_139_1 grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start),
    .ap_done(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_done),
    .ap_idle(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_idle),
    .ap_ready(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_ready),
    .reg_file_2_0_address0(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_0_address0),
    .reg_file_2_0_ce0(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_0_ce0),
    .reg_file_2_0_q0(reg_file_2_0_q0),
    .reg_file_2_1_address0(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_1_address0),
    .reg_file_2_1_ce0(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_1_ce0),
    .reg_file_2_1_q0(reg_file_2_1_q0),
    .ret_out(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ret_out),
    .ret_out_ap_vld(grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ret_out_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start_reg <= 1'b1;
        end else if ((grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_ready == 1'b1)) begin
            grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_file_3_0_ce0 = 1'b1;
    end else begin
        reg_file_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_file_3_0_we0 = 1'b1;
    end else begin
        reg_file_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start = grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ap_start_reg;

assign reg_file_2_0_address0 = grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_0_address0;

assign reg_file_2_0_ce0 = grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_0_ce0;

assign reg_file_2_1_address0 = grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_1_address0;

assign reg_file_2_1_ce0 = grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_reg_file_2_1_ce0;

assign reg_file_3_0_address0 = 64'd0;

assign reg_file_3_0_d0 = grp_compute_Pipeline_VITIS_LOOP_139_1_fu_38_ret_out;

endmodule //corr_accel_compute
